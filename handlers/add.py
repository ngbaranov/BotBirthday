import re

from aiogram import Router, F
from aiogram.types import Message
from datetime import datetime
from sqlalchemy.ext.asyncio import AsyncSession

from utils.state import waiting_for_birthday
from keyboards.reply import cancel_kb, main_kb
from dao.dao import BirthdayDAO
from schemas.birthday import BirthdayCreate

add_router = Router()


@add_router.message(F.text == "–î–æ–±–∞–≤–∏—Ç—å –î–†")
async def start_adding_birthday(message: Message):
    """–ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è."""
    # –ü–æ–º–µ—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ –æ–∂–∏–¥–∞—é—â–µ–≥–æ –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö
    waiting_for_birthday.add(message.from_user.id)
    await message.answer(
        "–í–≤–µ–¥–∏—Ç–µ –§–ò–û –∏ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤ 12.05.2000) \n –ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ ‚Äî –Ω–∞–∂–º–∏—Ç–µ ¬´–ì–æ—Ç–æ–≤–æ¬ª",
        reply_markup=cancel_kb()
    )


@add_router.message(~F.text.in_({"–ü—Ä–æ—Å–º–æ—Ç—Ä –î–†", "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –î–†", "–£–¥–∞–ª–∏—Ç—å –î–†"}))
async def handle_birthday_input(message: Message, session: AsyncSession):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è.
    –û–∂–∏–¥–∞–µ—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç: "–§–ò–û –î–î.–ú–ú.–ì–ì–ì–ì"
    1. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ä–µ–∂–∏–º–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è.
    2. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç "–ì–æ—Ç–æ–≤–æ" –∏–ª–∏ "/done", –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ —Ä–µ–∂–∏–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è.
    3. –ü—ã—Ç–∞–µ—Ç—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –≤–≤–æ–¥ –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑—É.
    4. –ï—Å–ª–∏ —Ñ–æ—Ä–º–∞—Ç –Ω–µ–≤–µ—Ä–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.
    """
    user_id = message.from_user.id

    if user_id not in waiting_for_birthday:
        return False

    if message.text.lower() in ("–≥–æ—Ç–æ–≤–æ", "/done"):
        waiting_for_birthday.discard(user_id)
        await message.answer("–í—ã –≤—ã—à–ª–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è üëå", reply_markup=main_kb())
        return

    try:
        text = re.sub(r"\s+", " ", message.text).strip()
        *name_parts, date_str = text.rsplit(" ", 1)
        full_name = " ".join(name_parts)
        birth_date = datetime.strptime(date_str, "%d.%m.%Y").date()

        birthday_data = BirthdayCreate(
            user_id=user_id,
            full_name=full_name,
            birth_date=birth_date
        )

        await BirthdayDAO(session).add(birthday_data)
        await message.answer(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: {full_name} ‚Äî {birth_date.strftime('%d.%m.%Y')}")

    except Exception:
        await message.answer("‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ü—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤ 12.03.1990")

