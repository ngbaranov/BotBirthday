import calendar
from collections import defaultdict
from aiogram import Router, F
from aiogram.types import Message
from sqlalchemy.ext.asyncio import AsyncSession
from datetime import date
from dao.dao import BirthdayDAO
from schemas.birthday import BirthdayOut

view_router = Router()

@view_router.message(F.text == "–ü—Ä–æ—Å–º–æ—Ç—Ä –î–†")
async def view_birthdays(message: Message, session: AsyncSession):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É "–ü—Ä–æ—Å–º–æ—Ç—Ä –î–†".
    –ü–æ–ª—É—á–∞–µ—Ç –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≤—Å–µ –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ –º–µ—Å—è—Ü–∞–º.
    :param message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    :param session: –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
    """
    # –ü–æ–ª—É—á–∞–µ–º –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    user_id = message.from_user.id
    birthdays = await BirthdayDAO(session).get_sorted_by_user_id(user_id)

    if not birthdays:
        await message.answer("‚ùå –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏–π.")
        return

    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ Pydantic-–º–æ–¥–µ–ª–∏
    birthdays_out = [BirthdayOut.model_validate(b, from_attributes=True) for b in birthdays]

    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –º–µ—Å—è—Ü–∞–º
    grouped = defaultdict(list)
    for b in birthdays_out:
        grouped[b.birth_date.month].append(b)

    MONTHS_RU = ["", "–Ø–Ω–≤–∞—Ä—å", "–§–µ–≤—Ä–∞–ª—å", "–ú–∞—Ä—Ç", "–ê–ø—Ä–µ–ª—å", "–ú–∞–π",
                 "–ò—é–Ω—å", "–ò—é–ª—å", "–ê–≤–≥—É—Å—Ç", "–°–µ–Ω—Ç—è–±—Ä—å", "–û–∫—Ç—è–±—Ä—å", "–ù–æ—è–±—Ä—å", "–î–µ–∫–∞–±—Ä—å"]

    text = "üéâ –í–∞—à–∏ –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è (–Ω–∞—á–∏–Ω–∞—è —Å –±–ª–∏–∂–∞–π—à–∏—Ö):\n\n"
    for month in sorted(grouped.keys(), key=lambda m: (m < date.today().month, m)):
        text += f"üìÖ {MONTHS_RU[month]}:\n"
        for b in grouped[month]:
            text += f"‚Ä¢ {b.full_name} ‚Äî {b.birth_date.strftime('%d.%m.%Y')}\n"
        text += "\n"

    await message.answer(text.strip())
