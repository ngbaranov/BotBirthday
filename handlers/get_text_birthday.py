import random

from aiogram.types import Message
from aiogram import Router, F

from utils.open_json import birthday_open_json
from utils.grattersAI import generate_birthday_text
from keyboards.reply import main_kb


text_router = Router()

@text_router.message(F.text == '–¢–µ–∫—Å—Ç—ã –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π')
async def get_text_birthday(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É "–¢–µ–∫—Å—Ç—ã –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π".
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é 3 –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è –∏–∑ –ø–∞—Ä—Å–∏–Ω–≥–∞ –∏ 1 –æ—Ç –ò–ò.
    :param message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    loading_message = await message.answer("–ì–µ–Ω–µ—Ä–∏—Ä—É—é –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è... ‚è≥")

    try:
        # –ü–æ–ª—É—á–∞–µ–º 3 –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è –∏–∑ –ø–∞—Ä—Å–∏–Ω–≥–∞
        parsed_texts = random.sample(birthday_open_json(), 3)
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é –ò–ò
        ai_text_raw = await generate_birthday_text()
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ –∏ —É–±–∏—Ä–∞–µ–º \n
        ai_text_clean = ai_text_raw[0].replace('\\n', '\n') if ai_text_raw else ""
        ai_texts = [f'ü§ñ <b>–ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç –ò–ò:</b>\n{ai_text_clean}']

        # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è
        all_texts = parsed_texts + ai_texts

        text = (
            "\n\n".join(all_texts) +
            "\n\n" +
            "–ï—Å–ª–∏ —Ç–µ–∫—Å—Ç—ã –Ω–µ –ø–æ–¥—Ö–æ–¥—è—Ç, –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É üëá –¢–µ–∫—Å—Ç—ã –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π"
        )

        await loading_message.delete()
        await message.answer(text, reply_markup=main_kb(), parse_mode="HTML")

    except Exception as e:
        await loading_message.delete()
        await message.answer(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
            reply_markup=main_kb())