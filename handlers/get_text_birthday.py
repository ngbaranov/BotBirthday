import random

from aiogram.types import Message
from aiogram import Router, F

from utils.open_json import birthday_open_json
from utils.grattersAI import generate_birthday_text
from keyboards.reply import main_kb


text_router = Router()

@text_router.message(F.text == '–¢–µ–∫—Å—Ç—ã –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π')
async def get_text_birthday(message: Message):
    # text = ("\n\n".join(random.sample(birthday_open_json(), 3)) +
    #         "\n\n" +
    #         "–ï—Å–ª–∏ —Ç–µ–∫—Å—Ç—ã –Ω–µ –ø–æ–¥—Ö–æ–¥—è—Ç, –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É üëá –¢–µ–∫—Å—Ç—ã –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π")
    #
    # await message.answer( text, reply_markup=main_kb())

    loading_message = await message.answer("–ì–µ–Ω–µ—Ä–∏—Ä—É—é –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è... ‚è≥")

    try:
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ OpenAI
        birthday_texts = await generate_birthday_text()
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤—ã–π —Ç–µ–∫—Å—Ç
        text = ("\n\n".join(birthday_texts) +
                "\n\n" +
                "–ï—Å–ª–∏ —Ç–µ–∫—Å—Ç—ã –Ω–µ –ø–æ–¥—Ö–æ–¥—è—Ç, –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É üëá –¢–µ–∫—Å—Ç—ã –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π")

        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
        await loading_message.delete()

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è
        await message.answer(text, reply_markup=main_kb())

    except Exception as e:
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        await loading_message.delete()

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        await message.answer(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
            reply_markup=main_kb()
        )